@{
    ViewBag.Title = "TourokuProject_List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    @*<link rel="stylesheet" href="@Url.Content(" ~/ElaAdmin/assets/css/lib/datatable/dataTables.bootstrap.min.css")" />*@
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/bootstrap-textbox.css")" />
}
<style>
    .text-price {
        text-align: right; 
        border: 0;
    }
</style>
<div id="divMain" class="container-fluid">
    <div class="card">
        <div class="row">
            <div class="col-xs-12 col-md-5">
                <div class="card-body card-block">
                    <div class="row form-group">
                        <div class="col col-md-12">
                            <button id="btnAdd" onclick="btnAddClick()" class="btn btn-primary col-xl-5 text-center" tabindex="14">
                                プロジェクト追加
                            </button>&nbsp;
                            <button id="btnnext" onclick="btnNextClick()" class="btn btn-next col-xl-3 text-center" tabindex="15">
                                品番検索
                            </button>&nbsp;
                            <button id="btnCSV" onclick="btnCSVClick()" class="btn btn-csv col-xl-2 text-center" tabindex="16">
                                CSV
                            </button>
                            <div id="registration" style="padding-top: 1.8rem!important;">
                                <div>
                                    <h4 class=" hr-text text-center">検索条件入力</h4>
                                </div>
                                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                                    <div class="col-md-12" style="padding-left:17px;">
                                        <div class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right: 12px;">ブランド名</label>
                                            <input type="text" tabindex="1" class="text-line col-xl-3 text-left" id="BrandCD" name="brandcd" maxlength="6" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                            <input type="text" tabindex="2" class="text-line col-xl-3 text-left" id="BrandName" name="brandname" maxlength="40" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                        </div>
                                    </div>
                                </div>

                                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                                    <div class="col-md-12" style="padding-left:34px;">
                                        <div id="Seasongp" class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right:15px;">シーズン</label>
                                            <input type="checkbox" tabindex="3" id="Degreeyear" name="checkbox" value="1" onkeydown="KeyDown(event,this)" checked>
                                            <label for="Degreeyear" style="padding-right:20px;">通年</label>
                                            <input type="checkbox" tabindex="4" id="SS" name="checkbox" value="2" onkeydown="KeyDown(event,this)" checked>
                                            <label for="SS" style="padding-right:20px;">SS</label>
                                            <input type="checkbox" tabindex="5" id="FW" name="checkbox" value="3" onkeydown="KeyDown(event,this,'CheckboxCheck')" checked>
                                            <label for="FW">FW</label>

                                        </div>
                                    </div>
                                </div>

                                <div class="pt-3 md-form" style="padding-top:0.5rem!important;">
                                    <div class="col-md-12" style="padding-left:64px;">
                                        <div class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right: 12px;">年度</label>
                                            <input type="text" tabindex="6" class="text-line col-xl-3 text-left" id="Year" name="year" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                        </div>
                                    </div>
                                </div>

                                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                                    <div class="col-md-12" style="padding-left:0px;">
                                        <div class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right: 12px;">プロジェクト</label>
                                            <input type="text" tabindex="7" class="text-line col-xl-3 text-left" id="ProjectCD" name="projectcd" maxlength="10" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                            <input type="text" tabindex="8" class="text-line col-xl-3 text-left" id="ProjectName" name="projectname" maxlength="60" onkeydown="KeyDown(event,this)" required placeholder="入力">

                                        </div>
                                    </div>
                                </div>

                                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                                    <div class="col-md-12" style="padding-left:30px;">
                                        <div class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right: 12px;">予定期間</label>
                                            <input type="text" tabindex="9" class="text-line col-xl-3 text-left" id="PeriodStart" name="periodstart" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                            &nbsp;~&nbsp;
                                            <input type="text" tabindex="10" class="text-line col-xl-3 text-left" id="PeriodEnd" name="periodend" onkeydown="KeyDown(event,this,'DateCompare')" required placeholder="入力">

                                        </div>
                                    </div>
                                </div>

                                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                                    <div class="col-md-12" style="padding-left:45px;">
                                        <div class="text-s text-custom1 text-uppercase mb-1">
                                            <label id="text" style="padding-right: 12px;">責任者</label>
                                            <input type="text" tabindex="11" class="text-line col-xl-3 text-left" id="ProjectManager" name="projectmanager" maxlength="20" onkeydown="KeyDown(event,this)" required placeholder="入力">
                                            <input type="text" tabindex="12" class="text-line col-xl-3 text-left" id="ProjectManagerName" name="projectmanagername" onkeydown="KeyDown(event,this)" required placeholder="入力">

                                        </div>
                                    </div>
                                </div>
                                <div class="pt-3 md-form" style="padding-left:0px; padding-top:2rem;">
                                    <div class="col-xl-12">
                                        <div class="col-xl-9">
                                            <button id="btnSearch" tabindex="13" onclick="btnSearchClick()" class="btn btn-dark col-xl-3 text-center float-lg-right">検索</button>
                                            &nbsp;&nbsp;&nbsp;&nbsp;

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-md-7">
                <div class="card-body card-block">
                    <table id="tblProject" class="tb1 col-sm-12" style="margin-left:10px;">
                        <thead>
                            <tr>
                                <th>ブランド</th>
                                <th></th>
                                <th class="text-center">シーズン</th>
                                <th class="text-center">年度</th>
                                <th></th>
                            </tr>
                            <tr>
                                <th>プロジェクト</th>
                                <th></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th></th>
                            </tr>
                            <tr>
                                <th>予定期間</th>
                                <th></th>
                                <th class="text-center">総生産数</th>
                                <th class="text-center">総金額</th>
                                <th></th>
                            </tr>

                        </thead>
                    </table>
                </div>
            </div>
            <div class="col-xs-12 col-md-2"></div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
    $(document).ready(function () {
        $("#formtitle").text("プロジェクト検索");
        $("#BrandCD").focus();
        DoubleByteCheck($("#BrandCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
        ExistsCheck($("#BrandCD"), "Brand", '@Url.Action("M_Brand_ExistsCheck", "api/BrandApi")', "BrandName");

         //YearCheck($("#Year"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');
         DoubleByteCheck($("#Year"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
         YearCheck($("#Year"), '@Url.Action("Year_Checking", "api/CommonApi")');

         DoubleByteCheck($("#ProjectCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
         ExistsCheck($("#ProjectCD"), "Project", '@Url.Action("M_Project_ExistsCheck", "api/TourokuProjectApi")', "ProjectName");

         YearMonthCheck($("#PeriodStart"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');
         YearMonthCheck($("#PeriodEnd"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');

         DoubleByteCheck($("#ProjectManager"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
         ExistsCheck($("#ProjectManager"), "User", '@Url.Action("M_User_ExistsCheck", "api/UserApi")', "ProjectManagerName");

        //$("#BrandName").attr('disabled', 'disabled');
        //$("#ProjectName").attr('disabled', 'disabled');
        //$("#ProjectManagerName").attr('disabled', 'disabled');

        //GetProject();
     });

     function CheckboxCheck(result) {
         if (result == 'OK') {
             var degreeyear = $("#Degreeyear").is(":checked");
             var ss = $("#SS").is(":checked");
             var fw = $("#FW").is(":checked");
             if (!degreeyear && !ss && !fw) {
                 $("#FW").focus();
                 ShowErrorMessage("E111");
             }
         }
     }



    //Date Error check at Enter click
    function DateCompare(result) {
         if (result == 'OK') {
             if (!($('#PeriodStart').val().trim() == '' || $('#PeriodEnd').val().trim() == '')) {
                 var model = {
                     startDate: $("#PeriodStart").val(),
                     endDate: $("#PeriodEnd").val()
                 };
                 @*var data = CalltoApiController('@Url.Action("DateComapre", "api/CommonApi")', model);
                 var dateData = JSON.parse(data);
                 if (dateData[0].flg != 'false') {*@
                 if (model.startDate <= model.endDate) {
                     $("#ProjectManager").focus();
                 }
                 else {
                     $("#PeriodEnd").focus();
                     ShowErrorMessage("E112");
                 }
             }
         }
     }

    //Date Error check before insert/update
    function DateCompareOnSave() {
        if (!($('#PeriodStart').val().trim() == '' || $('#PeriodEnd').val().trim() == '')) {
             var model = {
                 startDate: $("#PeriodStart").val(),
                 endDate: $("#PeriodEnd").val()
             };
             @*var data = CalltoApiController('@Url.Action("DateComapre", "api/CommonApi")', model);
             var dateData = JSON.parse(data);
           if (dateData[0].flg != 'false') {*@
            if (model.startDate <= model.endDate) {
               return "0";
           }
           else {
               return "E112";
           }
       }
         else return "0";
    }

        function btnSearchClick() {
            var degreeyear = $("#Degreeyear").is(":checked");
            var ss = $("#SS").is(":checked");
            var fw = $("#FW").is(":checked");
            if (!degreeyear && !ss && !fw) {
                $("#FW").focus();
                var data = ShowErrorMessage("E111");
                return data;
            }
            else {
                var res = ErrorCheckOnSave();
                if (res == "0") {
                    var res1 = DateCompareOnSave();
                    if (res1 == "0") {
                        GetProject()
                    }
                    else {
                        $("#PeriodEnd").focus();
                        ShowErrorMessage(res1);
                    }
                }
                else {
                    ShowErrorMessage(res);
                }
            }

        }

        function GetProject() {
            var Tmodel = {
                BrandCD: $('#BrandCD').val(),
                BrandName: $('#BrandName').val(),
                Year: $('#Year').val(),
                ProjectCD: $('#ProjectCD').val(),
                ProjectName: $('#ProjectName').val(),
                PeriodStart: $('#PeriodStart').val(),
                PeriodEnd: $('#PeriodEnd').val(),
                ProjectManager: $('#ProjectManager').val(),
                ProjectManagerName: $('#ProjectManagerName').val(),
            };

            var selected = new Array();
            $("#Seasongp input[type=checkbox]:checked").each(function () {
                selected.push(this.value);
            });
            if (selected.length > 0)
                Tmodel.Season = selected.join(",");

            $.ajax({
                type: "Post",
                url: "@Url.Action("M_Project_Select_List", "api/TourokuProjectApi")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Tmodel),
                headers:
                {
                    Authorization: 'Basic ' + btoa('Capital_MM' + ':' + 'CKM12345!')
                },
                success: function (response) {
                    BindTable(response);
                }
            });
        }

        function BindTable(response) {
            table = $('#tblProject').DataTable({

                data: JSON.parse(response),
                "bFilter": false,
                "bLengthChange": false,
                "bInfo": false,
                "bSort": false,
                destroy: true,
                "columns": [

                    {
                        "data": null,
                        className: "Border1",
                        render: function (data, type, row) {
                            return '<label>' + data.BrandCD + '</label><br/><label>' + data.ProjectCD + '</label><br/><label>' + data.PeriodStart + '</label>';
                        }
                    },
                    {
                        "data": null,
                        className: "Border2",
                        render: function (data, type, row) {
                            return '<label>' + data.BrandName + '</label><br/><label>' + data.ProjectName + '</label></br><label>' + '   ' + '</label>';
                        }
                    },
                    {
                        "data": null,
                        className: "Border3",
                        render: function (data, type, row) {
                            //return '<label>' + data.Season + '</label><br/><label></label><br/><label>' + data.Production + '</label>';
                            return '<label class="col-md-12 text-center">' + data.Season + '</label><br/><label></label><br/><label class="col-md-12 text-right">' + data.Production + '</label>';
                        }
                    },

                    {
                        "data": null,
                        className: "Border4",
                        render: function (data, type, row) {
                            //return '<span>' + data.Year + '</span><br/><label class="col-md-12 text-right">' + data.SalesPrice + '</label><br/><span class="col-md-12 text-right">' + data.SalesPrice + ' </span>';
                           // return '<label>' + data.Year + '</label><br/><label></label><br/><label style="text-align:right;width:70%;">00000000000</label>';                 
                            return '<label class="col-md-12 text-center">' + data.Year + '</label><br/><label></label><br/><label class="col-md-12 text-right">' + data.SalesPrice + '</label>';
                            //return '<input type="text" class="text-center" style="border:0px;" value = ' + data.Year + ' readonly><br/><label></label><br/><input type="text" class="text-price" value = ' + data.SalesPrice + ' readonly>';
                            //return '<label class="text-center">' + data.Year + '</label><br/><label></label><br/><label class="col-md-12 text-price">' + data.SalesPrice + '</label>';
                        }
                    },

                    {
                        "data": null,
                        className: "Border5",
                        render: function (data, type, row) {
                            return '<label><a href="#" onClick="btnEditClick(\'' + data.BrandCD + '\',\'' + data.ProjectCD + '\')" style="color:blue">編集</a></label><br/><label><a href="#" onClick="btnDelClick(\'' + data.BrandCD + '\',\'' + data.ProjectCD + '\')" style="color:red">削除</a></label> <br/> <label><a href="#" onClick="btnCopyClick(\'' + data.BrandCD + '\',\'' + data.ProjectCD + '\')" style="color:green">複写</a></label><br/>';
                        }
                    },
                ]
                //"drawCallback": function (settings) {
                //    $("#tblProject thead").remove();
                //}
            });

        }

        function btnCSVClick() {
            var degreeyear = $("#Degreeyear").is(":checked");
            var ss = $("#SS").is(":checked");
            var fw = $("#FW").is(":checked");
            if (!degreeyear && !ss && !fw) {
                    $("#FW").focus();
                    var data = ShowErrorMessage("E111");
                    return data;
                }
                else {
                var res = ErrorCheckOnSave();
                     if (res == "0") {
                         var res1 = DateCompareOnSave();
                         if (res1 == "0") {
                             var Tmodel = {
                                 BrandCD: $('#BrandCD').val(),
                                 BrandName: $('#BrandName').val(),
                                 Year: $('#Year').val(),
                                 ProjectCD: $('#ProjectCD').val(),
                                 ProjectName: $('#ProjectName').val(),
                                 PeriodStart: $('#PeriodStart').val(),
                                 PeriodEnd: $('#PeriodEnd').val(),
                                 ProjectManager: $('#ProjectManager').val(),
                                 ProjectManagerName: $('#ProjectManagerName').val(),
                             };

                             if ($('#Degreeyear').is(':checked'))
                                 Tmodel.Season = "1";
                             else if ($('#SS').is(':checked'))
                                 Tmodel.Season = "2";
                             else Tmodel.Season = "3";

                             var data = CalltoApiController('@Url.Action("M_Project_CSV", "api/TourokuProjectApi")', Tmodel);

                             var csv = JSON2CSV(data);
                             var downloadLink = document.createElement("a");
                             var blob = new Blob(["\ufeff", csv]);
                             var url = URL.createObjectURL(blob);
                             downloadLink.href = url;
                             downloadLink.download = "プロジェクト登録.csv";

                             document.body.appendChild(downloadLink);
                             downloadLink.click();
                             document.body.removeChild(downloadLink);
                         }
                         else {
                             $("#PeriodEnd").focus();
                             ShowErrorMessage(res1);
                         }
                    }
                    else
                        ShowErrorMessage(res);
                 }
       }

        //Convert Jsonstring to csv
        function JSON2CSV(objArray) {
            var array = typeof JSONString != 'object' ? JSON.parse(objArray) : JSONString;
            var fields = Object.keys(array[0])
            var replacer = function (key, value) { return value === null ? null : value }
            var csv = array.map(function (row) {
                return fields.map(function (fieldName) {
                    return JSON.stringify(row[fieldName], replacer)
                }).join(',')
            })
            csv.unshift(fields.join(',')) // add header column
            csv = csv.join('\r\n');
            return csv;
        }

        function btnAddClick() {
            location.href = '@Url.Action("TourokuProject_Entry", "TourokuProject")?Mode=New'
        }

         function btnNextClick() {
            location.href = '@Url.Action("TourokuHinban_List", "TourokuProject")?Mode=New'
        }

        function btnEditClick(BrandCD, ProjectCD) {
            location.href = '@Url.Action("TourokuProject_Entry", "TourokuProject")?ProjectCD=' + ProjectCD + '&BrandCD=' + BrandCD + '&Mode=Edit';
        }

        function btnCopyClick(BrandCD, ProjectCD) {
            location.href = '@Url.Action("TourokuProject_Entry", "TourokuProject")?ProjectCD=' + ProjectCD + '&BrandCD=' + BrandCD + '&Mode=Copy';

        }

        function btnDelClick(BrandCD, ProjectCD) {
            location.href = '@Url.Action("TourokuProject_Entry", "TourokuProject")?ProjectCD=' + ProjectCD + '&BrandCD=' + BrandCD + '&Mode=Delete';
     }

     $('#btnCSV').keydown(function (e) {
         var code = e.keyCode || e.which;
         if (code == 9) {
             if (e.shiftKey) {
                 //Focus previous input
                 if (thisTab == startIndex) {
                     $("." + tabLimitInID).find('[tabindex=' + lastIndex + ']').focus();
                     return false;
                 }
                 else {
                     e.preventDefault();
                 }
             }
             e.preventDefault();
         }
     });

    </script>


}
