

@model Models.TourokuProjectModel
@{
    ViewBag.Title = "TourokuProject_Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/bootstrap-textbox.css")" />
}


<div id="divMain" class="container-fluid">
    <div class="content">
        <div class="p-5 row shadow" style="box-shadow: 0 .1rem .4rem rgba(0,0,0,.1) !important; background:white; border-radius:5px;">
            <div class="col-xs-12 col-md-3"></div>
            <div class="col-xs-12 col-md-6">
                <div>
                    <h2 class=" hr-text text-center">プロジェクト登録</h2>
                </div>
                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="1" class="text-line col-xl-4 text-left" onkeydown="KeyDown(event,this)" id="ProjectCD" name="projectcd" maxlength="10" required placeholder="プロジェクトコード">

                            <input type="text" tabindex="2" class="text-line col-xl-7 text-left" onkeydown="KeyDown(event,this)" id="ProjectName" name="projectname" maxlength="60" required placeholder="プロジェクト名">
                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="3" class="text-line col-xl-2 text-left" onkeydown="KeyDown(event,this)" id="Year" name="year" maxlength="4"  required placeholder="年度">
                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form" style="padding-top:1.2rem!important;">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="4" class="text-line col-xl-3 text-left" onkeydown="KeyDown(event,this,'BrandCheck')" id="BrandCD" name="brandcd" maxlength="6" required placeholder="ブランド">
                            <label id="BrandName" style="padding-left:15px;"><b>ブランド表示</b></label>

                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form" style=" padding-top:1.2rem!important;">
                    <div class="col-xl-12" style="padding-left: 0px">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <div class="custom-control custom-radio" style="padding-left:0px!important;">
                                <label class="text" id="Season" style="padding-right:30px;">シーズン</label>
                                <input type="radio" tabindex="5" onkeydown="KeyDown(event,this)" id="rdoyear" name="radio" checked>
                                <label for="rdoyear" style="padding-right:20px;">通年</label>
                                <input type="radio" tabindex="6" onkeydown="KeyDown(event,this)" id="rdoss" name="radio">
                                <label for="rdoss" style="padding-right:20px;">SS</label>
                                <input type="radio" tabindex="7" onkeydown="KeyDown(event,this)" id="rdofw" name="radio">
                                <label for="rdofw">FW</label>
                            </div>
                        </div>
                    </div>

                </div>
                <div>
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="8" class="text-line col-xl-3 text-left" onkeydown="KeyDown(event,this)" id="PeriodStart" name="periodstart" required placeholder="予定期間">
                            <label class="col-xl-1" style="font-size: 1.4rem;text-align:center;">~</label>
                            <input type="text" tabindex="9" class="text-line col-xl-3 text-left" onkeydown="KeyDown(event,this,'DateCompare')" id="PeriodEnd" name="periodend" required placeholder="予定期間">

                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <label id="Production" style="padding-right:20px;">総生産数</label>
                            <label id="TotalProduction" style="padding-right:30px;"><b>総生産数表示</b></label>
                            <label id="SalesPrice" style="padding-right:20px;">総金額</label>
                            <label id="TotalSalesPrice"><b>総金額表示</b></label>
                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="10" class="text-line col-xl-4 text-left"  onkeydown="KeyDown(event,this,'ProjectManagerCheck')" id="ProjectManager" name="projectmanager" maxlength="20" required placeholder="責任者">
                            <label id="ProjectManagerName" style="padding-left:15px;"><b>責任者表示</b></label>
                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form">
                    <div class="col-xs-12">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <input type="text" tabindex="11" class="text-line col-xl-5 text-left input-numeral11" onkeydown="KeyDown(event,this)" id="AllocationCount" name="allocationcount" required placeholder="配賦用固定値">

                        </div>
                    </div>
                </div>
                <div class="pt-3 md-form">
                    <div class="col-xl-12 text-center">
                        <div class="text-s text-custom1 text-uppercase mb-1">
                            <button id="btnSave" tabindex="12" onclick="btnSaveClick()" class="btn btn-dark col-xl-4 text-center">登録</button>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                            <button id="btnCancel" tabindex="13" onclick="btnCancelClick()" class="btn btn-primary col-xl-4 text-center">戻る</button>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="APIURL" value="@Url.Action("M_Project_ExistsCheck", "api/TourokuProjectApi")" />
            </div>
            <div class="col-xs-12 col-md-3"></div>
        </div>
    </div>
</div>


@section Scripts{
<script type="text/javascript">
    $(document).ready(function () {
            $("#formtitle").text("プロジェクト登録");
            $("#ProjectCD").focus();
             var Mode = '@Model.Mode';
            if (Mode == 'New') {
                $('#btnSave').html('登録');
                
                RequiredCheck($("#ProjectCD"));
                DoubleByteCheck($("#ProjectCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                AlreadyExistsCheck($("#ProjectCD"), "Project", '@Url.Action("M_Project_ExistsCheck", "api/TourokuProjectApi")');
                RequiredCheck($("#ProjectName"));

                RequiredCheck($("#Year"));
                DoubleByteCheck($("#Year"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                YearCheck($("#Year"), '@Url.Action("Year_Checking", "api/CommonApi")');

                RequiredCheck($("#BrandCD"));
                DoubleByteCheck($("#BrandCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                ExistsCheck($("#BrandCD"), "Brand", '@Url.Action("M_Brand_ExistsCheck", "api/BrandApi")', "BrandName");

                RequiredCheck($("#PeriodStart"));
                YearMonthCheck($("#PeriodStart"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');
                RequiredCheck($("#PeriodEnd"));
                YearMonthCheck($("#PeriodEnd"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');

                DoubleByteCheck($("#ProjectManager"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                ExistsCheck($("#ProjectManager"), "User", '@Url.Action("M_User_ExistsCheck", "api/UserApi")', "ProjectManagerName");
                
                DoubleByteCheck($("#Season"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
            }
            else if (Mode == 'Edit') {
                $('#btnSave').html('更新');
                $("#ProjectCD").attr('disabled', 'disabled');
                $("#ProjectName").focus();

                RequiredCheck($("#ProjectName"));

                RequiredCheck($("#Year"));
                DoubleByteCheck($("#Year"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                YearCheck($("#Year"), '@Url.Action("Year_Checking", "api/CommonApi")');

                RequiredCheck($("#BrandCD"));
                DoubleByteCheck($("#BrandCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                ExistsCheck($("#BrandCD"), "Brand", '@Url.Action("M_Brand_ExistsCheck", "api/BrandApi")', "BrandName");

                RequiredCheck($("#PeriodStart"));
                YearMonthCheck($("#PeriodStart"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');
                RequiredCheck($("#PeriodEnd"));
                YearMonthCheck($("#PeriodEnd"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');

                ExistsCheck($("#ProjectManager"), "User", '@Url.Action("M_User_ExistsCheck", "api/UserApi")', "ProjectManagerName");
                DoubleByteCheck($("#ProjectManager"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');

                DoubleByteCheck($("#Season"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                
                ShowData();
            }
            else if (Mode == 'Copy') {
                        $('#btnSave').html('登録');
                        $("#ProjectCD").focus();

                     RequiredCheck($("#ProjectCD"));
                     DoubleByteCheck($("#ProjectCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                     AlreadyExistsCheck($("#ProjectCD"), "Project", '@Url.Action("M_Project_ExistsCheck", "api/TourokuProjectApi")');
                     RequiredCheck($("#ProjectName"));

                     RequiredCheck($("#Year"));
                     DoubleByteCheck($("#Year"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                     YearCheck($("#Year"), '@Url.Action("Year_Checking", "api/CommonApi")');

                     RequiredCheck($("#BrandCD"));
                     DoubleByteCheck($("#BrandCD"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                     ExistsCheck($("#BrandCD"), "Brand", '@Url.Action("M_Brand_ExistsCheck", "api/BrandApi")', "BrandName");

                     RequiredCheck($("#PeriodStart"));
                     YearMonthCheck($("#PeriodStart"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');
                     RequiredCheck($("#PeriodEnd"));
                     YearMonthCheck($("#PeriodEnd"), '@Url.Action("YearMonth_Checking", "api/CommonApi")');

                     DoubleByteCheck($("#ProjectManager"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');
                     ExistsCheck($("#ProjectManager"), "User", '@Url.Action("M_User_ExistsCheck", "api/UserApi")', "ProjectManagerName");
                     
                     DoubleByteCheck($("#Season"), '@Url.Action("DoubleByte_Checking", "api/CommonApi")');

                     ShowData();
            }
            else{
                        $('#btnSave').html('削除');
                        $("#ProjectCD").attr('disabled', 'disabled');
                        $("#ProjectName").attr('disabled', 'disabled');
                        $("#Year").attr('disabled', 'disabled');
                        $("#BrandCD").attr('disabled', 'disabled');
                        $("#Season").attr('disabled', 'disabled');
                        $("#PeriodStart").attr('disabled', 'disabled');
                        $("#PeriodEnd").attr('disabled', 'disabled');
                        $("#ProjectManager").attr('disabled', 'disabled');
                        $("#AllocationCount").attr('disabled', 'disabled');
                        $("#btnSave").focus();
            
                        ShowData();
                   }
    });

    function BrandCheck(result) {
        if (result == 'OK') {
            @*RequiredCheck($("#BrandCD"));
            ExistsCheck($("#BrandCD"), "Brand", '@Url.Action("M_Brand_ExistsCheck", "api/BrandApi")', "BrandName");*@

            var Mode = '@Model.Mode';
            if (Mode == 'Edit') {
                if ($('#rdoyear').is(':checked')) {
                    $("#rdoyear").focus();
                }
                else if ($('#rdoss').is(':checked')) {
                    $("#rdoss").focus();
                }
                else if ($("#rdofw").is(':checked')){
                    $("#rdofw").focus();
            }
                else $("#rdoyear").focus();
            }
        }
        else {
            $("#BrandCD").val('');
            $("#BrandName").text('ブランド表示');
            $("#Season").focus();
        }
       
        $("#BrandName").css("font-weight", "Bold");
    }

    function ProjectManagerCheck(result) {
        if (result == 'OK') {
            @*ExistsCheck($("#ProjectManager"), "User", '@Url.Action("M_User_ExistsCheck", "api/UserApi")', "ProjectManagerName");
            $("#ProjectManager").foucs();*@
        }
        else {
            $("#ProjectManager").val('');
            $("#ProjectManagerName").text('責任者表示');
            $("#AllocationCount").focus();

        }
        $("#ProjectManagerName").css("font-weight", "Bold");
    }

      //Bind data
     function ShowData() {
         var Tmodel = {
             ProjectCD: '@Model.ProjectCD',
         };
         var data = CalltoApiController('@Url.Action("M_Project_Select_Entry", "api/TourokuProjectApi")', Tmodel);
         var ProjectData = JSON.parse(data);
         $("#ProjectCD").val(ProjectData[0].ProjectCD);
         $("#ProjectName").val(ProjectData[0].ProjectName);
         $("#BrandCD").val(ProjectData[0].BrandCD);
         $("#Year").val(ProjectData[0].Year);
         $("#PeriodStart").val(ProjectData[0].PeriodStart);
         $("#PeriodEnd").val(ProjectData[0].PeriodEnd);
       //  $("#TotalProduction").text(ProjectData[0].Production);
      //   $("#TotalSalesPrice").text(ProjectData[0].SalesPrice);
         $("#ProjectManager").val(ProjectData[0].ProjectManager);
         $("#AllocationCount").val(ProjectData[0].AllocationCount);

         if (!ProjectData[0].BrandName)
             $("#BrandName").text("ブランド表示");
         else $("#BrandName").text(ProjectData[0].BrandName);

         
         if (!ProjectData[0].ProjectManagerName)
             $("#ProjectManagerName").text("責任者表示");
         else $("#ProjectManagerName").text(ProjectData[0].ProjectManagerName);

         if (!ProjectData[0].Production)
             $("#TotalProduction").text("総生産数表示");
         else $("#TotalProduction").text(ProjectData[0].Production);

         if (!ProjectData[0].SalesPrice)
             $("#TotalSalesPrice").text("総金額表示");
         else $("#TotalSalesPrice").text(ProjectData[0].SalesPrice);

         //Bind Season
         if (ProjectData[0].Season == "1")
             $("#rdoyear").prop("checked", true);
         else if (ProjectData[0].Season == "2")
             $("#rdoss").prop("checked", true);
         else
             $("#rdofw").prop("checked", true);

         $("#BrandName").css("font-weight", "Bold");
         $("#TotalProduction").css("font-weight", "Bold");
         $("#TotalSalesPrice").css("font-weight", "Bold");
    }

    //Date Error check at Enter click
    function DateCompare(result) {
         if (result == 'OK') {
             if (!($('#PeriodStart').val().trim() == '' || $('#PeriodEnd').val().trim() == '')) {
                 var model = {
                     startDate: $("#PeriodStart").val() + '/01',
                     endDate: $("#PeriodEnd").val() + '/01'
                 };
                 var data = CalltoApiController('@Url.Action("DateComapre", "api/CommonApi")', model);
                 var dateData = JSON.parse(data);
                 if (dateData[0].flg != 'false') {
                     $("#ProjectManager").focus();
                 }
                 else {
                     $("#PeriodEnd").focus();
                     ShowErrorMessage("E112");
                 }
             }
         }
     }

    //Date Error check before insert/update
    function DateCompareOnSave() {
        if (!($('#PeriodStart').val().trim() == '' || $('#PeriodEnd').val().trim() == '')) {
             var model = {
                 startDate: $("#PeriodStart").val() + '/01',
                 endDate: $("#PeriodEnd").val() + '/01'
             };
             var data = CalltoApiController('@Url.Action("DateComapre", "api/CommonApi")', model);
             var dateData = JSON.parse(data);
           if (dateData[0].flg != 'false') {
               return "0";
           }
           else {
               return "E112";
           }
       }
         else return "0";
    }

    function ErrorCheckBreforeDelete() {
        var Tmodel = {
            ProjectCD: $("#ProjectCD").val()
        };
        var data = CalltoApiController('@Url.Action("D_Cost_ExistsDeleteCheck", "api/TourokuProjectApi")', Tmodel);
        var costcheck = JSON.parse(data);
         if (costcheck[0].MessageID == "E119") {
             return "E119";
         }
         else {
                var data = CalltoApiController('@Url.Action("D_Devliery_ExistsDeleteCheck", "api/TourokuProjectApi")', Tmodel);
                var deliverycheck = JSON.parse(data);
                 if (deliverycheck[0].MessageID == "E126") {
                     return "E126";
                 }
                else {
                        return "0";
                 }
        }
        return "0";
    }

    // Insert/Update/Delete
     function DoProcess() {
         focusControl = $("#ProjectCD");
          var Tmodel = {
              ProjectCD: $("#ProjectCD").val(),
              ProjectName: $("#ProjectName").val(),
              BrandCD: $("#BrandCD").val(),
              Year: $("#Year").val(),
              ProjectManager: $("#ProjectManager").val(),
              PeriodStart: $("#PeriodStart").val(),
              PeriodEnd: $("#PeriodEnd").val(),
              Production: $("#Production").val(),
              SalesPrice: $("#SalesPrice").val(),
              AllocationCount: ($('#AllocationCount').val()).replace(",", ""),
              Mode:'@Model.Mode'
         };

         //For Season
         if ($('#rdoyear').is(':checked'))
             Tmodel.Season = "1";
         else if ($('#rdoss').is(':checked'))
             Tmodel.Season = "2";
         else Tmodel.Season = "3";

         var data = CalltoApiController('@Url.Action("Project_CUD", "api/TourokuProjectApi")', Tmodel);
         ShowSuccessMessage(data,'@Url.Action("TourokuProject_List", "TourokuProject")');
    }

    function DeleteConfrim() {
        DoProcess();
    }

     //save
    function btnSaveClick() {
        var res = ErrorCheckOnSave();
        if (res == "0") {
            var Mode = '@Model.Mode';

            if (Mode == "Delete") {   //Delete
                var res1 = ErrorCheckBreforeDelete();
                if (res1 == "0") {
                    ShowConfirmMessage("Q102", "DeleteConfrim");
                    DoProcess();
                }
                else {
                    ShowErrorMessage(res1);
                }
            }
            else {     // Insert/Update
                var res1 = DateCompareOnSave();
                if (res1 == "0") {
                    DoProcess();
                }
                else {
                    $("#PeriodEnd").focus();
                    ShowErrorMessage(res1);
                }
            }
        }
        else
            ShowErrorMessage(res);
    }

     function btnCancelClick() {
         location.href = '@Url.Action("TourokuProject_List", "TourokuProject")';
     }

    $('#btnCancel').keydown(function (e) {
        var code = e.keyCode || e.which;
        if (code == 9) {
            if (e.shiftKey) {
                //Focus previous input
                if (thisTab == startIndex) {
                    $("." + tabLimitInID).find('[tabindex=' + lastIndex + ']').focus();
                    return false;
                }
                else {
                    e.preventDefault();
                }
            }
            e.preventDefault();
        }
    });

</script>
    @*<script src="@Url.Content("~/Scripts/datepicker.js")"></script>
    <script src="@Url.Content("~/Scripts/datepicker.en.js")"></script>*@
   
}

